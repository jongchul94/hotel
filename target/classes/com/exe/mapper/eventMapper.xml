<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
PUBLIC "-/mybatis.org//DTD Mapper 3.0//EN"
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="eventmapper">

<insert id="insertEvent" parameterType="com.exe.dto.EventDTO">
	insert into event (eventIndex,eventTitle,startDate,endDate,time,location,price,content1,content2,content3,savefileName) 
	values (#{eventIndex},#{eventTitle},#{startDate},#{endDate},#{time},#{location},#{price},#{content1},#{content2},#{content3},#{savefileName})
</insert>


<select id="maxNum" resultType="int">
	select nvl(max(eventIndex),0) from event
</select>

<select id="getEventCount" parameterType="map" resultType="int">
	select nvl(count(*),0) from event
</select>

<select id="getEventLists" resultType="com.exe.dto.EventDTO"> 
	select eventIndex,eventTitle,to_char(startDate,'yy-mm-dd') startDate,to_char(endDate,'yy-mm-dd') endDate,time,location,price,content1,content2,content3,savefileName from event 
</select>

<!-- getEventLists ByUserId 
<select id="getEventListsByUserId" resultType="com.exe.dto.EventDTO" parameterType="String">
	select eventIndex,eventTitle,to_char(startDate,'yy-mm-dd') startDate,to_char(endDate,'yy-mm-dd') endDate,time,location,
	price,content1,content2,savefileName from event where (eventIndex)
	in (select eventIndex from eventBooking where userId = #{userId})
</select>
-->
<!-- getEventLists ByUserId  -->
<select id="getEventListsByUserId" resultType="com.exe.dto.EventCheckDTO" parameterType="String">
	<![CDATA[
	select a.eventIndex, a.eventTitle,to_char(a.startDate,'yy-mm-dd') startDate, to_char(a.endDate,'yy-mm-dd') endDate,
	a.time, a.location, a.price, a.content1, a.savefileName,
	b.eventBookingNum, b.userRequest, b.eventBookingDate, b.companionNumber ,b.userSelectedDate
	from event a, eventBooking b
	where a.eventIndex = b.eventIndex
	and b.userId = #{userId}
	]]>
</select>


<select id="getReadEventData" parameterType="int" resultType="com.exe.dto.EventDTO">
	select eventIndex,eventTitle,to_char(startDate,'yy-mm-dd') startDate,to_char(endDate,'yy-mm-dd') endDate,
	time,location,price,content1,content2,content3,savefileName from event where eventIndex=#{eventIndex}
</select>


<update id="updateEventData" parameterType="com.exe.dto.EventDTO">
	update event set eventTitle=#{eventTitle},startDate=#{startDate},
	endDate=#{endDate},time=#{time},location=#{location},price=#{price},
	content1=#{content1},content2=#{content2},content3=#{content3},savefileName=#{savefileName}
	where eventIndex=#{eventIndex}
</update>

<delete id="deleteEventData" parameterType="int">
	delete event where eventIndex=#{eventIndex}
</delete>

<!-- Event Review -->
<select id="reviewMaxNum" resultType="int">
 	select nvl(max(eventReviewNum),0) from eventReview
</select>
	
<select id="countReview" resultType="int" parameterType="int">
 	select nvl(count(*),0) from eventReview
 	where eventIndex=#{eventIndex}
</select>
	
<insert id="insertReview" parameterType="com.exe.dto.EventReviewDTO">
	insert into eventReview (eventReviewNum,userId,name,email,content,created,eventIndex)
	values (#{eventReviewNum},#{userId},#{name},#{email},#{content},sysdate,#{eventIndex})
</insert>
	
<select id="getReviewList" parameterType="int" resultType="com.exe.dto.EventReviewDTO">
	select * from eventReview where eventIndex=#{eventIndex} order by created desc
</select>

<delete id="deleteReviewData" parameterType="int">
	delete eventReview where eventReviewNum=#{eventReviewNum}
</delete>
	
	
<!-- EventBooking -->
<select id="bookingMaxNum" resultType="int">
 	select nvl(max(eventBookingNum),0) from eventBooking
</select>

	
<insert id="insertBooking" parameterType="com.exe.dto.EventBookingDTO">
	insert into eventBooking (eventBookingNum,eventIndex,userId,userName,userRequest,eventBookingDate,userSelectedDate,companionNumber)
	values (#{eventBookingNum},#{eventIndex},#{userId},#{userName},#{userRequest},sysdate,#{userSelectedDate},#{companionNumber})
</insert>

<delete id="deleteBookingData" parameterType="int">
	delete eventBooking where eventBookingNum=#{eventBookingNum} 
</delete>

<select id="readEventBookingData" parameterType="hashMap" resultType="com.exe.dto.EventBookingDTO">
	select eventBookingNum,eventIndex,userId,userName,userRequest,eventBookingDate,userSelectedDate,companionNumber from eventBooking 
	where userId=#{userId} and eventIndex=#{eventIndex}
</select>

<!-- start~enddate 기반으로 이용 가능한 이벤트 목록 받아오기 -->
<select id="getReadEventOut"  parameterType="map" resultType="com.exe.dto.EventDTO" >
<![CDATA[
select eventIndex,eventTitle,to_char(startDate,'yy-mm-dd') startDate,to_char(endDate,'yy-mm-dd') endDate,
time,location,price,content1,content2,content3,savefileName from event where eventIndex in(
select eventIndex from event
where endDate >= (select to_date(#{startDate,javaType=String,jdbcType=VARCHAR},'yyyy/mm/dd') from dual)
and startDate <= (select to_date(#{endDate,javaType=String,jdbcType=VARCHAR},'yyyy/mm/dd') from dual))
and eventTitle like '%' || #{searchValue} || '%'
]]>
</select>

<select id="getReadEventListByAsc3" resultType="com.exe.dto.EventDTO">
<![CDATA[
select eventIndex,eventTitle,to_char(startDate,'yy-mm-dd') startDate,to_char(endDate,'yy-mm-dd') endDate
,time,location,price,content1,content2,content3,savefileName from event
where rownum <=3 order by startDate asc
]]>
</select>

</mapper>